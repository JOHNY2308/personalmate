import os
import telebot
from telebot import types
import const
from geopy.distance import vincenty

# Example of your code beginning
#           Config vars
token = os.environ['TELEGRAM_TOKEN']


#       Your bot code below
bot = telebot.TeleBot(token)

markup_menu = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
btn_address = types.KeyboardButton('üçî –ë–ª–∏–∂–∞–π—à–∏–π Burger Heroes', request_location=True)
btn_payment = types.KeyboardButton('üíµ –°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã')
btn_delivery = types.KeyboardButton('üöó –°–ø–æ—Å–æ–±—ã –¥–æ—Å—Ç–∞–≤–∫–∏')
markup_menu.add(btn_address, btn_payment, btn_delivery)

markup_inline_payment = types.InlineKeyboardMarkup(row_width=1)
btn_in_cash = types.InlineKeyboardButton('–ù–∞–ª–∏—á–Ω—ã–µ', callback_data='cash')
btn_in_card = types.InlineKeyboardButton('–ü–æ –∫–∞—Ä—Ç–µ', callback_data='card')
btn_in_invoice = types.InlineKeyboardButton('–ë–∞–Ω–∫–æ–≤—Å–∫–∏–π –ø–µ—Ä–µ–≤–æ–¥', callback_data='invoice')

markup_inline_payment.add(btn_in_cash, btn_in_card, btn_in_invoice)


@bot.message_handler(commands=['start', 'help'])
def send_welcome(message):
    bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç! –Ø —Å—É–ø–µ—Ä–±–æ—Ç. –ñ–º–∏  –Ω–∞ –∫–Ω–æ–ø–∫–∏", reply_markup=markup_menu)


@bot.message_handler(func=lambda message: True)
def echo_all(message):
    if message.text == "üöó –°–ø–æ—Å–æ–±—ã –¥–æ—Å—Ç–∞–≤–∫–∏":
        bot.reply_to(message, "–ö—É—Ä—å–µ—Ä—Å–∫–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞!", reply_markup=markup_menu)
    elif message.text == "üíµ –°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã":
        bot.reply_to(message, "–í—ã –º–æ–∂–µ—Ç–µ –æ–ø–ª–∞—Ç–∏—Ç—å —Ä–∞–∑–Ω—ã–º–∏ —Å–ø–æ—Å–æ–±–∞–º–∏! ",
                     reply_markup=markup_inline_payment)
    else:
        bot.reply_to(message, message.text, reply_markup=markup_menu)


@bot.message_handler(func=lambda message: True, content_types=['location'])
def magazin_location(message):
    lon = message.location.longitude
    lat = message.location.latitude

    distance = []
    for m in const.MAGAZINS:
        result = vincenty((m['latm'], m['lonm']), (lat, lon)).kilometers
        distance.append(result)
    index = distance.index(min(distance))

    bot.send_message(message.chat.id, '–ë–ª–∏–∂–∞–π—à–∏–π –∫ –í–∞–º Burger Heroes!')
    bot.send_venue(message.chat.id, const.MAGAZINS[index]['latm'], const.MAGAZINS[index]['lonm'],
                   const.MAGAZINS[index]['title'], const.MAGAZINS[index]['address'])


@bot.callback_query_handler(func=lambda call: True)
def call_back_payment(call):
    if call.data == 'cash':
        bot.send_message(call.message.chat.id, text="""
        –ù–∞–ª–∏—á–Ω–∞—è –æ–ø–ª–∞—Ç–∞, –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –≤ —Ä—É–±–ª—è—Ö, –≤ –∫–∞—Å—Å–µ –º–∞–≥–∞–∑–∏–Ω–∞""", reply_markup=markup_inline_payment)
    elif call.data == 'card':
        bot.send_message(call.message.chat.id, text="""
        –ú–æ–∂–Ω–æ –æ–ø–ª–∞—Ç–∏—Ç—å –∫–∞—Ä—Ç–æ–π""", reply_markup=markup_inline_payment)
    elif call.data == 'invoice':
        bot.send_message(call.message.chat.id, text="""
        –ú–æ–∂–Ω–æ –±–∞–Ω–∫–æ–≤—Å–∫–∏–º –ø–µ—Ä–µ–≤–æ–¥–æ–º""", reply_markup=markup_inline_payment)    


bot.polling()
